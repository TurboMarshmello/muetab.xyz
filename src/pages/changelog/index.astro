---
import type { CollectionEntry } from "astro:content";
import getLocale from "@lib/getLocale";
import { changeLanguage } from "i18next";
import { getCollection } from "astro:content";
import Page from "../../layouts/Page.astro";
import { Debug } from "astro/components";

changeLanguage("en");

type Modify<T, R> = Omit<T, keyof R> & R;
type Changelog = Modify<
	CollectionEntry<"changelog">,
	{
		slug: string;
	}
>;
const locale = getLocale(Astro.url.pathname);
const files = await import.meta.glob("/src/content/changelog/**/*.md");
const assemble = (locale, name) => `/src/content/changelog/${locale}/${name}`;
for (const file in files) {
	const name = file.split("/").slice(-1)[0];
	if (
		files[assemble(locale, name)] === undefined &&
		files[assemble("en", name)] !== undefined
	) {
		console.warn(
			`WARNING: "/changelog/${name}" has not been translated to "${locale}"!" Make sure you run "npm run i18n:copy" before you commit your changes.`
		);
	} else if (
		files[assemble(locale, name)] !== undefined &&
		files[assemble("en", name)] === undefined
	) {
		throw new Error(
			`Content MUST be written in English first. Please write your content in "${assemble(
				"en",
				name
			)}" before translating it to ${locale}.`
		);
	}
}
let versions: Changelog[] = await getCollection("changelog");
versions = versions
	.filter((version) => version.slug.split("/").shift() === locale)
	.map((version) => {
		version.slug = version.slug.split("/").slice(1).join("/");
		return version;
	});
---

<Page frontmatter={{}}>
	<Debug {versions} />
</Page>
