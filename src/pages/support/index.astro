---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import getLocale from "@lib/getLocale";
import { changeLanguage, t } from "i18next";
import { localizePath } from "astro-i18next";
import getSearchIndex from "@lib/getSearchIndex";
import Page from "@layouts/Page.astro";
import Title from "@components/Title.astro";
import SearchBar from "@components/SearchBar.svelte";

changeLanguage("en");

type Modify<T, R> = Omit<T, keyof R> & R;
type KnowledgebaseArticle = Modify<
	CollectionEntry<"knowledgebase">,
	{
		slug: string;
	}
>;

const locale = getLocale(Astro.url.pathname);
const files = import.meta.glob("/src/content/knowledgebase/**/**/*.md");
const assemble = (locale, name) =>
	`/src/content/knowledgebase/${locale}/${name}`;

for (const file in files) {
	const name = file.split("/").slice(-2).join("/");
	if (
		files[assemble(locale, name)] === undefined &&
		files[assemble("en", name)] !== undefined
	) {
		console.warn(
			`WARNING: "/support/kb/${name}" has not been translated to "${locale}"!" Make sure you run "npm run i18n:copy" before you commit your changes.`
		);
	} else if (
		files[assemble(locale, name)] !== undefined &&
		files[assemble("en", name)] === undefined
	) {
		throw new Error(
			`Content MUST be written in English first. Please write your content in "${assemble(
				"en",
				name
			)}" before translating it to ${locale}.`
		);
	}
}

const searchIndex = JSON.parse(await getSearchIndex(locale));
const articles: KnowledgebaseArticle[] = await getCollection("knowledgebase");
const categories: { [key: string]: KnowledgebaseArticle[] } = articles
	.filter((article) => article.slug.split("/").shift() === locale)
	.reduce((acc, article) => {
		const category = article.id.split("/")[1];
		if (acc[category] === undefined) acc[category] = [];
		article.slug = article.slug.split("/").slice(2).join("/");
		acc[category].push(article);
		return acc;
	}, {});
---

<Page frontmatter={{ title: t("pages.support.title") }}>
	<main>
		<Title>{t("pages.support.title")}</Title>

		<br /><br /><br />
		<SearchBar client:idle {articles} index={searchIndex} />
		<br /><br />
	</main>
</Page>
