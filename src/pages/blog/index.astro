---
import type { CollectionEntry } from "astro:content";
import getLocale from "@lib/getLocale";
import { changeLanguage } from "i18next";
import { getCollection } from "astro:content";
import Page from "../../layouts/Page.astro";
import { Debug } from "astro/components";

changeLanguage("en");

type Modify<T, R> = Omit<T, keyof R> & R;
type BlogPost = Modify<CollectionEntry<"blog">, {
    slug: string;
}>;
const locale = getLocale(Astro.url.pathname);
const files = await import.meta.glob("/src/content/blog/**/*.md");
const assemble = (locale, name) => `/src/content/blog/${locale}/${name}`;
for (const file in files) {
    const name = file.split("/").slice(-1)[0];
    if (files[assemble(locale, name)] === undefined &&
        files[assemble("en", name)] !== undefined) {
        console.warn(`WARNING: "/blog/${name}" has not been translated to "${locale}"!" Make sure you run "npm run i18n:copy" before you commit your changes.`);
    }
    else if (files[assemble(locale, name)] !== undefined &&
        files[assemble("en", name)] === undefined) {
        throw new Error(`Content MUST be written in English first. Please write your content in "${assemble("en", name)}" before translating it to ${locale}.`);
    }
}
let posts: BlogPost[] = await getCollection("blog");
posts = posts
    .filter((post) => post.slug.split("/").shift() === locale)
    .map((post) => {
    post.slug = post.slug.split("/").slice(1).join("/");
    return post;
});
---

<Page frontmatter={{}}>
	<Debug {posts} />
</Page>
